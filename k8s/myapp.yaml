apiVersion: apps/v1
kind: Deployment
metadata:
  name: simple-app
  labels:
    app: simple-app
spec:
  replicas: 5
  selector:
    matchLabels:
      app: simple-app
  template:
    metadata:
      labels:
        app: simple-app
    spec:
      imagePullSecrets:
      - name: ghcr-login-secret # Reference to the Docker Hub login secret
      containers:
      - name: simple-app-container
        image: ghcr.io/rahulzamre/react-resume-template-main:master # Replace with your app image if needed
        imagePullPolicy: Always
        ports:
        - containerPort: 3000 

---
apiVersion: v1
kind: Service
metadata:
  name: simple-app-service
spec:
  selector:
    app: simple-app
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
  type: ClusterIP # Using ClusterIP since we will expose via Ingress

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: simple-app-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: letsencrypt-prod
    # If you encounter a redirect loop or are getting a 307 response code
    # then you need to force the nginx ingress to connect to the backend using HTTPS.
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - resume.rahulzamre.vip
    secretName: myapp-tls # as expected by argocd-server
  rules:
  - host: resume.rahulzamre.vip  # Replace with your own domain or IP
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: simple-app-service
            port:
              number: 3000 

